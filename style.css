/*!
Theme Name: WordPress Gulp Stylus Starter Theme
Theme URI: https://github.com/lsteel/Wordpress-Gulp-Stylus-Starter-Theme
Author: Lorin Steel
Author URI: http://lorinsteel.com
Description: WordPress Gulp Stylus Starter Theme for use as a starting template for building custom themes.
Version: 1.0
License: GNU General Public License v2.0
License URI: http://www.gnu.org/licenses/gpl-2.0.html
Text Domain: _lsbasetheme
Domain Path: /languages/
Tags:

 _lsbasetheme is based on Underscores http://underscores.me/, (C) 2012-2014 Automattic, Inc.

*/article,aside,details,figcaption,figure,footer,header,hgroup,hr,main,nav,section,summary{display:block}pre,textarea{overflow:auto}fieldset,hr,img,legend{border:0}body,fieldset{margin:0}fieldset,hr,legend,td,th{padding:0}.clear:after,.comment-content:after,.entry-content:after,.site-content:after,.site-footer:after,.site-header:after,clearfix:after,h1,h2,h3,h4,h5,h6{clear:both}.hidden,.invisible{visibility:hidden}clearfix:after,clearfix:before{content:" ";/*! 1 */display:table/*! 2 */}/*! normalize.css v3.0.1 | MIT License | git.io/normalize */html{font-family:sans-serif;/*! 1 */-ms-text-size-adjust:100%;/*! 2 */-webkit-text-size-adjust:100%/*! 2 */}audio,canvas,progress,video{display:inline-block;/*! 1 */vertical-align:baseline/*! 2 */}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background:0 0}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,optgroup,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{height:auto;/*! Make sure images are scaled correctly. */max-width:100%/*! Adhere to container width. */}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:1px;border-top:1px solid #ccc;margin:1em 0}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;/*! 1 */font:inherit;/*! 2 */margin:0/*! 3 */}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;/*! 2 */cursor:pointer/*! 3 */}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;/*! 1 */padding:0/*! 2 */}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;/*! 1 *//*! 2 */box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}legend{/*! 1 *//*! 2 */}textarea{resize:vertical}table{border-collapse:collapse;border-spacing:0}/*! HTML5 Boilerplate v4.3.0 | MIT License | http://h5bp.com/ */button,html,input,select,textarea{color:#222}html{font-size:1em;line-height:1.4}::-moz-selection{background:orange;text-shadow:none}::selection{background:orange;text-shadow:none}audio,canvas,img,video{vertical-align:middle}.browsehappy{margin:.2em 0;background:#ccc;color:#000;padding:.2em 0}*,:after,:before{box-sizing:border-box}a,a:visited{color:red}a:hover{color:#00f}p{margin-bottom:1.5em}blockquote{margin:0 1.5em}address{margin:0 0 1.5em}.alignleft{display:inline;float:left;margin-right:1.5em}.alignright{display:inline;float:right;margin-left:1.5em}.aligncenter{clear:both;display:block;margin:0 auto}.screen-reader-text{clip:rect(1px,1px,1px,1px);position:absolute!important}.screen-reader-text:active,.screen-reader-text:focus,.screen-reader-text:hover{background-color:#f1f1f1;border-radius:3px;box-shadow:0 0 2px 2px rgba(0,0,0,.6);clip:auto!important;color:#21759b;display:block;font-size:14px;font-weight:700;height:auto;left:5px;line-height:normal;padding:15px 23px 14px;text-decoration:none;top:5px;width:auto;z-index:100000/*! Above WP toolbar */}.clear:after,.clear:before,.comment-content:after,.comment-content:before,.entry-content:after,.entry-content:before,.site-content:after,.site-content:before,.site-footer:after,.site-footer:before,.site-header:after,.site-header:before{content:'';display:table}.infinite-scroll .paging-navigation,.infinite-scroll.neverending .site-footer{/*! Theme Footer (when set to scrolling) */display:none}.infinity-end.neverending .site-footer{display:block}.grid{margin:0 0 20px}@include clearfix();[class*=col-]{float:left;padding-right:20px}.grid [class*=col-]:last-of-type{padding-right:0}.col-1-2{width:50%}.col-1-3{width:33.33%}.col-2-3{width:66.66%}.col-1-4{width:25%}.col-3-4{width:75%}.col-1-8{width:12.5%}.col-7-8{width:87.5%}.module{padding:20px}.grid-pad{padding:20px 0 20px 20px}.grid-pad [class*=col-]:last-of-type{padding-right:20px}#page{max-width:1000px;margin:20px auto}.content-area{float:left;margin:0 -25% 0 0;width:100%}.site-main{margin:0 25% 0 0}.site-content .widget-area{float:right;overflow:hidden;width:25%}.main-navigation,.site-footer{width:100%;clear:both}.main-navigation{display:block;float:left}.main-navigation ul{list-style:none;margin:0;padding-left:0}.main-navigation li{float:left;position:relative}.main-navigation a{display:block;text-decoration:none}.main-navigation ul ul{box-shadow:0 3px 3px rgba(0,0,0,.2);display:none;float:left;left:0;position:absolute;top:1.5em;z-index:99999}.main-navigation ul ul ul{left:100%;top:0}.main-navigation ul ul a{width:200px}.main-navigation ul li:hover>ul{display:block}.menu-toggle{cursor:pointer;display:none}@media screen and (max-width:600px){.main-navigation.toggled .nav-menu,.menu-toggle{display:block}.main-navigation ul{display:none}}.site-main .comment-navigation,.site-main .paging-navigation,.site-main .post-navigation{margin:0 0 1.5em;overflow:hidden}.comment-navigation .nav-previous,.paging-navigation .nav-previous,.post-navigation .nav-previous{float:left;width:50%}.comment-navigation .nav-next,.paging-navigation .nav-next,.post-navigation .nav-next{float:right;text-align:right;width:50%}.hentry{margin:0 0 1.5em}.byline,.updated{display:none}.group-blog .byline,.single .byline{display:inline}.entry-content,.entry-summary,.page-content{margin:1.5em 0 0}.page-links{clear:both;margin:0 0 1.5em}.comment-content img.wp-smiley,.entry-content img.wp-smiley,.page-content img.wp-smiley{border:none;margin-bottom:0;margin-top:0;padding:0}.wp-caption{border:1px solid #ccc;margin-bottom:1.5em;max-width:100%}.wp-caption img[class*=wp-image-]{display:block;margin:1.2% auto 0;max-width:98%}.wp-caption-text{text-align:center}.wp-caption .wp-caption-text{margin:.8075em 0}.site-main .gallery{margin-bottom:1.5em}.site-main .gallery a img{border:none;height:auto;max-width:90%}.widget select,embed,iframe,object{max-width:100%}.site-main .gallery dd,.site-main .gallery figcaption{margin:0}.widget{margin:0 0 1.5em}.widget_search .search-submit{display:none}.comment-content a{word-wrap:break-word}.hidden{display:none!important}.visuallyhidden{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.visuallyhidden.focusable:active,.visuallyhidden.focusable:focus{clip:auto;height:auto;margin:0;overflow:visible;position:static;width:auto}@media print{blockquote,img,pre,tr{page-break-inside:avoid}*{background:0 0!important;color:#000!important;/*! Black prints faster: h5bp.com/s */box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="javascript:"]:after,a[href^="#"]:after{content:""}blockquote,pre{border:1px solid #999}thead{display:table-header-group/*! h5bp.com/t */}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}/*!# sourceMappingURL=data:application/json;charset=utf8;base64, */